jobs:
  build:
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      SAMPLE_REGISTRY: ${{ vars.SAMPLE_REGISTRY }}
      TARGET_ARCH: ${{ matrix.target_arch }}
      TARGET_OS: ${{ matrix.target_os }}
    name: Build ${{ matrix.target_os }}_${{ matrix.target_arch }} binaries
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check Docker version
      run: docker --version
    - continue-on-error: true
      name: Set REPO_OWNER
      run: 'REPO_OWNER=${{ github.repository_owner }}

        # Lowercase the value

        echo "REPO_OWNER=${REPO_OWNER,,}" >>${GITHUB_ENV}

        '
      shell: bash
    - continue-on-error: true
      name: Check out code
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Parse release version and set REL_VERSION
      run: python ./.github/scripts/get_release_version.py
    - continue-on-error: true
      if: ${{ matrix.target_arch == 'arm' || matrix.target_arch == 'arm64' }}
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: arm,arm64
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: v0.9.1
    - continue-on-error: true
      name: Build docker image
      run: "SAMPLE_LIST=(tutorials/hello-kubernetes tutorials/distributed-calculator\
        \ tutorials/pub-sub tutorials/bindings tutorials/observability tutorials/secretstore)\n\
        for sample in \"${SAMPLE_LIST[@]}\"; do\n  echo \"Building image for ${sample}...\"\
        \n  pushd ${sample}\n  make build\n  popd\ndone\n"
    - continue-on-error: true
      name: docker login
      run: 'docker login -u ${{ secrets.DOCKER_REGISTRY_ID }} -p ${{ secrets.DOCKER_REGISTRY_PASS
        }}

        '
    - continue-on-error: true
      name: publish image to dockerhub
      run: "SAMPLE_LIST=(tutorials/hello-kubernetes tutorials/distributed-calculator\
        \ tutorials/pub-sub tutorials/bindings tutorials/observability tutorials/secretstore)\n\
        for sample in \"${SAMPLE_LIST[@]}\"; do\n  echo \"Push image for ${sample}...\"\
        \n  pushd ${sample}\n  make push\n  popd\ndone\n"
    - continue-on-error: true
      if: github.event_name != 'pull_request'
      name: GitHub container registry login
      uses: docker/login-action@v1
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.repository_owner }}
    - continue-on-error: true
      env:
        SAMPLE_REGISTRY: ghcr.io/${{ env.REPO_OWNER }}/samples
      name: Build docker image
      run: "SAMPLE_LIST=(tutorials/hello-kubernetes tutorials/distributed-calculator\
        \ tutorials/pub-sub tutorials/bindings tutorials/observability tutorials/secretstore)\n\
        for sample in \"${SAMPLE_LIST[@]}\"; do\n  echo \"Building image for ${sample}...\"\
        \n  pushd ${sample}\n  make build\n  popd\ndone\n"
    - continue-on-error: true
      env:
        SAMPLE_REGISTRY: ghcr.io/${{ env.REPO_OWNER }}/samples
      if: github.event_name != 'pull_request'
      name: publish image to ghcr
      run: "SAMPLE_LIST=(tutorials/hello-kubernetes tutorials/distributed-calculator\
        \ tutorials/pub-sub tutorials/bindings tutorials/observability tutorials/secretstore)\n\
        for sample in \"${SAMPLE_LIST[@]}\"; do\n  echo \"Push image for ${sample}...\"\
        \n  pushd ${sample}\n  make push\n  popd\ndone\n"
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          target_os: linux
        os:
        - ubuntu-latest
        target_arch:
        - arm
        - arm64
        - amd64
  publish:
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      SAMPLE_REGISTRY: ${{ vars.SAMPLE_REGISTRY }}
    name: Publish docker manifest
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Set REPO_OWNER
      run: 'REPO_OWNER=${{ github.repository_owner }}

        # Lowercase the value

        echo "REPO_OWNER=${REPO_OWNER,,}" >>${GITHUB_ENV}

        '
    - continue-on-error: true
      name: Check out code
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Parse release version and set REL_VERSION
      run: python ./.github/scripts/get_release_version.py
    - continue-on-error: true
      name: docker login
      run: 'docker login -u ${{ secrets.DOCKER_REGISTRY_ID }} -p ${{ secrets.DOCKER_REGISTRY_PASS
        }}

        '
    - continue-on-error: true
      name: create docker manifest
      run: "SAMPLE_LIST=(tutorials/hello-kubernetes tutorials/distributed-calculator\
        \ tutorials/pub-sub tutorials/bindings tutorials/observability tutorials/secretstore)\n\
        for sample in \"${SAMPLE_LIST[@]}\"; do\n  echo \"Building image for ${sample}...\"\
        \n  pushd ${sample}\n  make manifest-create\n  popd\ndone\n"
    - continue-on-error: true
      name: publish manifest to dockerhub
      run: "SAMPLE_LIST=(tutorials/hello-kubernetes tutorials/distributed-calculator\
        \ tutorials/pub-sub tutorials/bindings tutorials/observability tutorials/secretstore)\n\
        for sample in \"${SAMPLE_LIST[@]}\"; do\n  echo \"Push image for ${sample}...\"\
        \n  pushd ${sample}\n  make manifest-push\n  popd\ndone\n"
    - continue-on-error: true
      if: github.event_name != 'pull_request'
      name: GitHub container registry login
      uses: docker/login-action@v1
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.repository_owner }}
    - continue-on-error: true
      env:
        SAMPLE_REGISTRY: ghcr.io/${{ env.REPO_OWNER }}/samples
      if: github.event_name != 'pull_request'
      name: create ghcr manifest
      run: "SAMPLE_LIST=(tutorials/hello-kubernetes tutorials/distributed-calculator\
        \ tutorials/pub-sub tutorials/bindings tutorials/observability tutorials/secretstore)\n\
        for sample in \"${SAMPLE_LIST[@]}\"; do\n  echo \"Building image for ${sample}...\"\
        \n  pushd ${sample}\n  make manifest-create\n  popd\ndone\n"
    - continue-on-error: true
      env:
        SAMPLE_REGISTRY: ghcr.io/${{ env.REPO_OWNER }}/samples
      if: github.event_name != 'pull_request'
      name: publish manifest to ghcr
      run: "SAMPLE_LIST=(tutorials/hello-kubernetes tutorials/distributed-calculator\
        \ tutorials/pub-sub tutorials/bindings tutorials/observability tutorials/secretstore)\n\
        for sample in \"${SAMPLE_LIST[@]}\"; do\n  echo \"Push image for ${sample}...\"\
        \n  pushd ${sample}\n  make manifest-push\n  popd\ndone\n"
name: Build Quickstarts
on:
  repository_dispatch:
    types: trigger-ga___build.yml
