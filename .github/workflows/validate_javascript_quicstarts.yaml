jobs:
  validate:
    env:
      DAPR_DEFAULT_IMAGE_REGISTRY: GHCR
      DAPR_INSTALL_URL: https://raw.githubusercontent.com/dapr/cli/master/install
      GOVER: 1.19
      KIND_IMAGE_SHA: sha256:f52781bc0d7a19fb6c405c2af83abfeb311f130707a0e219175677e366cc45d1
      KIND_VERSION: v0.17.0
      KUBERNETES_VERSION: v1.25.3
      PODMAN_VERSION: 4.4.4
    name: Validate Javascript quickstart on ${{ matrix.os }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out code
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Load environment variables
      uses: artursouza/export-env-action@v2
      with:
        envFile: ./.github/env/global.env
        expand: 'true'
    - continue-on-error: true
      if: matrix.os == 'macos-latest'
      name: Install podman - MacOS
      run: '# Install podman

        curl -sL -o podman.pkg https://github.com/containers/podman/releases/download/v${{
        env.PODMAN_VERSION }}/podman-installer-macos-amd64.pkg

        sudo installer -pkg podman.pkg -target /

        export PATH=/opt/podman/bin:$PATH

        echo "/opt/podman/bin" >> $GITHUB_PATH

        # Start podman machine

        sudo podman-mac-helper install

        podman machine init

        podman machine start --log-level debug

        echo "CONTAINER_RUNTIME=podman" >> $GITHUB_ENV

        '
      timeout-minutes: 15
    - continue-on-error: true
      if: matrix.os == 'macos-latest'
      name: Install podman-compose
      run: 'sudo pip3 install podman-compose

        '
    - continue-on-error: true
      if: matrix.os == 'macos-latest'
      name: Create symbolic link between Podman and Docker
      run: 'sudo ln -s $(which podman) /usr/local/bin/docker

        sudo ln -s $(which podman-compose) /usr/local/bin/docker-compose

        '
    - continue-on-error: true
      if: matrix.os != 'windows-latest'
      name: Set up Dapr CLI - Mac/Linux
      run: wget -q ${{ env.DAPR_INSTALL_URL }}/install.sh -O - | /bin/bash -s ${{
        env.DAPR_CLI_VERSION }}
    - continue-on-error: true
      if: matrix.os == 'windows-latest'
      name: Set up Dapr CLI - Windows
      run: powershell -Command "\$$script=iwr -useb ${{ env.DAPR_INSTALL_URL }}/install.ps1;
        \$$block=[ScriptBlock]::Create(\$$script); invoke-command -ScriptBlock \$$block
        -ArgumentList ${{ env.DAPR_CLI_VERSION }}"
    - continue-on-error: true
      name: Install Dapr
      run: 'export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

        dapr init --runtime-version=${{ env.DAPR_RUNTIME_VERSION }}

        dapr --version

        '
    - continue-on-error: true
      name: Install utilities dependencies
      run: 'echo "PATH=$PATH:$HOME/.local/bin" >> $GITHUB_ENV

        pip3 install setuptools wheel

        pip3 install mechanical-markdown

        '
    - continue-on-error: true
      name: Validate building blocks with Javascript
      run: "variants=(\"http\" \"sdk\")\nbuilding_blocks=$(find . -maxdepth 1 -mindepth\
        \ 1 -type d)\nfor building_block in $building_blocks; do\n  for variant in\
        \ \"${variants[@]}\"\n  do\n    if [ ! -d \"$building_block/javascript/$variant\"\
        \ ]; \n    then\n      echo \"$building_block/javascript/$variant does not\
        \ exist.\"\n    else\n      pushd $building_block/javascript/$variant\n  \
        \    echo \"Validating $building_block/javascript/$variant quickstart\"\n\
        \      make validate \n      popd\n    fi\n  done\ndone\n"
    - continue-on-error: true
      name: Linkcheck README.md
      run: make validate
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
    timeout-minutes: 130
name: Validate javascript quickstart
on:
  repository_dispatch:
    types: trigger-ga___validate_javascript_quicstarts.yaml
